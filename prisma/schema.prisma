generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username   String?
  fname      String?
  lname      String?
  tel        String?
  password   String?
  createdAt  DateTime?    @default(now())
  updatedAt  DateTime?    @updatedAt
  deleted_at DateTime?    @map("deleted_at")
  credits    Credit[]
  banks      Banks[]
  lotterys   Lottery[]
  orderlotto Orderlotto[]
}

model Banks {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId      String   @db.Uuid
  accountname String
  namebank    String
  numberbank  String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deleted_at  DateTime @map("deleted_at")
  user        User?    @relation(fields: [userId], references: [id])
}

model Credit {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId     String   @db.Uuid
  addcredit  Int
  amount     Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  deleted_at DateTime @map("deleted_at")
  user       User?    @relation(fields: [userId], references: [id])
}

model About {
  id         String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title      String
  subtitle   String
  detail     String
  image      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  deleted_at DateTime @map("deleted_at")
}

model Contact {
  id            String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  titleName     String
  address       String
  tel           String
  opentime      String
  line          String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deleted_at    DateTime? @map("deleted_at")
  titleOpenDate String
}

model Lottotype {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name       String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime @updatedAt
  deleted_at DateTime? @map("deleted_at")
  lotterys   Lottery[]
}

model Lottery {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId      String       @db.Uuid
  numberlotto String
  price       Int?
  lottotypeId String       @db.Uuid
  createdAt   DateTime     @default(now())
  updatedAt   DateTime    @updatedAt
  deleted_at  DateTime?    @map("deleted_at")
  lottotype   Lottotype?   @relation(fields: [lottotypeId], references: [id])
  user        User?        @relation(fields: [userId], references: [id])
  orderlotto  Orderlotto[]
}

model Orderlotto {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  lotteryid String   @db.Uuid
  userId    String   @db.Uuid
  total     Int?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime    @updatedAt
  deleted_at  DateTime?    @map("deleted_at")
  lottery   Lottery? @relation(fields: [lotteryid], references: [id])
  user      User?    @relation(fields: [userId], references: [id])
}
